local LoadTick = tick()

local Settings = {
	["AutomaticUpdates"] = false, -- slower, uses default settings
	["ToggleGUI"] = true, -- Toggles Aimkid GUI
	["Backrooms"] = false, -- Teleports you to the backrooms if you fall into the void
	["FastLoad"] = true, -- Changes roblox loading GUI
	["KickGui"] = true, -- Changes Kick GUI
	["ReplaceWait"] = true, -- Replaces wait() with task.wait(), which is more optimized
	["ExtraGlobals"] = true, -- Adds [netless, saveinstance, fwait, Event, Global, ServerInfo, SmartLerp, Notify], modifys [decompile,Players:Chat,getsynasset]
	["Notifications"] = true, -- Toggles Notifications
	["DisablePrompts"] = true, -- Disables Purchase Prompts
	["AntiAFK"] = true, -- Uses common anti-afk
	["AntiKick"] = true, -- Uses common anti-client kick
	["RemovedLayered"] = true, -- For Layered Clothing Crashes
	["ChatFilterLabel"] = true, -- Adds a TextLabel that displays filtered text
	["GUISettings"] = {
		["MainColor"] = Color3.fromRGB(57, 0, 98),
		["SecondaryColor"] = Color3.fromRGB(47, 0, 84),
		["Image"] = "rbxassetid://4840955387" -- "rbxassetid://ID" or getsynasset(PATH)
	}
}

if Settings["AutomaticUpdates"] then
	local printconsole = printconsole or print
	loadstring(game:HttpGet("https://raw.githubusercontent.com/AwsZFvR4Fh6/Ya/main/extra/one'sautoexec.txt",true))()
	printconsole(tostring("Full Load Time in " .. tick() - LoadTick))
else
	-- :: Variables
	local Global = getgenv and getgenv() or shared
	local getsynasset = getsynasset or getcustomasset
	local isfile = isfile or readfile and function(f) return pcall(function() readfile(f) end) end
	local printconsole = printconsole or print
	local request = (syn and syn.request) or (http and http.request) or (request)
	local notify,Event
	
	-- :: Functions
	
	local function IsGameLoaded()
		if not game:IsLoaded("Workspace") then game.Loaded:Wait() end
	end
	
	local function GetLinkedAsset(Link)
		local Name = string.split(Link,"/"); Name = Name[#Name]
		local File
		if getsynasset then
			if not isfile(Name) then
				local Data,T = request and request({Url = Link,Method = 'GET'}) or game:HttpGet(Link)
				if request then Data = Data.Body end
				writefile(Name,Data)
			end
			File = getsynasset(Name)
		end
		return File
	end
	
	-- :: Code
	
	if Settings["ToggleGUI"] then task.spawn(function()
		Global.AidKid = Settings["GUISettings"]
		printconsole(tostring("GUI loaded in " .. math.abs(tick() - loadstring(game:HttpGet("https://raw.githubusercontent.com/AwsZFvR4Fh6/Ya/main/KenzenGui.lua",true))())))
	end) end
	
	if Settings["Backrooms"] then task.spawn(function()
			IsGameLoaded()
			local Player = game:GetService("Players").LocalPlayer
			local function RootCheck(Char)
				local HumRoot = Char:WaitForChild("HumanoidRootPart",500)
				local HB
				HB = game:GetService("RunService").Heartbeat:Connect(function()
					if HumRoot and HumRoot.Parent then
						if HumRoot.Position.Y <= workspace.FallenPartsDestroyHeight + 10 then
							game:GetService("TeleportService"):Teleport(3227921645, Player)
							HB:Disconnect()
						end
					else
						HB:Disconnect()
					end
				end)
			end
		end) end
	
	if Settings["FastLoad"] then task.spawn(function()
			local BlackFrame = game:GetService("CoreGui"):WaitForChild("RobloxLoadingGui",500):WaitForChild("BlackFrame",500); do
				BlackFrame.BackgroundTransparency = 1
				BlackFrame.Active = false
				BlackFrame:GetPropertyChangedSignal("BackgroundTransparency"):Connect(function() BlackFrame.BackgroundTransparency = 1 end)
			end

			local Part = Instance.new("Part"); do
				Part.Size = Vector3.new(5,1,5)
				Part.CFrame = CFrame.Angles(0,math.rad(-90),0)--CFrame.new(Vector3.new(),workspace.CurrentCamera.CFrame.Position)
				Part.Transparency = 1
				Part.Parent = workspace
			end
			local Surface = Instance.new("SurfaceGui"); do
				Surface.Face = Enum.NormalId.Top
				Surface.Parent = Part
			end
			local Image = Instance.new("ImageLabel"); do
				Image.Size = UDim2.new(1,0,1,0)
				Image.BackgroundTransparency = 1
				Image.Image = GetLinkedAsset("https://cdn.discordapp.com/attachments/806690952089305158/954924304238260284/FN_nKHuUcAAY8H4.png") or "rbxassetid://9184481698"
				Image.Parent = Surface
			end
			IsGameLoaded(); Part:Destroy()
		end) end
	
	if Settings["KickGui"] then task.spawn(function()
			game:GetService("CoreGui"):WaitForChild("RobloxPromptGui",500):WaitForChild("promptOverlay",500).ChildAdded:Connect(function(v)
				if v.Name == "ErrorPrompt" then
					game:GetService("GuiService"):ClearError()
					local ErrorText = v:FindFirstChild("ErrorMessage",true)
					v.Visible = false
					local VideoFrame = Instance.new("VideoFrame"); do
						VideoFrame.AnchorPoint = Vector2.new(0.5,1)
						VideoFrame.BackgroundTransparency = 1
						VideoFrame.Position = UDim2.new(0.5,0,0.8,0)
						VideoFrame.Size = UDim2.new(0,450,0,225)
						VideoFrame.ZIndex = 999999998
						VideoFrame.Looped = true
						VideoFrame.Video = GetLinkedAsset("https://cdn.discordapp.com/attachments/806623634038325318/957076752843280424/one-piece-vinsmoke-sanji.webm") or "rbxassetid://5670785995"
						VideoFrame:Play()
						VideoFrame.Parent = game:GetService("CoreGui").RobloxPromptGui
					end
					local TextLabel = Instance.new("TextLabel"); do
						TextLabel.AnchorPoint = Vector2.new(0.5,0)
						TextLabel.BackgroundTransparency = 1
						TextLabel.Position = UDim2.new(0.5,0,1,0)
						TextLabel.Size = UDim2.new(1,0,0.3,0)
						TextLabel.ZIndex = 999999998
						TextLabel.Font = Enum.Font.Gotham
						TextLabel.TextSize = 20
						TextLabel.Text = ErrorText.Text
						TextLabel.TextColor3 = Color3.new(1,1,1)
						TextLabel.TextStrokeTransparency = 0
						TextLabel.Parent = VideoFrame
						ErrorText.Changed:Connect(function()
							TextLabel.Text = ErrorText.Text
						end)
					end
					local TextButton = Instance.new("TextButton"); do
						TextButton.AnchorPoint = Vector2.new(0,0)
						TextButton.Size = UDim2.new(1,0,1,0)
						TextButton.ZIndex = 999999999
						TextButton.Text = ""
						TextButton.Transparency = 1
						TextButton.Parent = VideoFrame
						TextButton.Activated:Connect(function()
							VideoFrame:Destroy()
						end)
					end
					repeat game:GetService("GuiService"):ClearError() task.wait(0/1) until not VideoFrame
				end
			end)
		end) end
	
	if Settings["ReplaceWait"] then task.spawn(function()
			Global.wait = function(Time)
				if Time then
					return task.wait(Time)
				else
					return task.wait(1/30)
				end
			end
		end) end
	
	if Settings["ExtraGlobals"] then task.spawn(function()
			task.spawn(function() IsGameLoaded() loadstring(game:HttpGetAsync("https://raw.githubusercontent.com/AwsZFvR4Fh6/Ya/main/SaveInstance.txt",true))() end)
			
			Global.netless = function(Part)
				if Part:IsA("BasePart") then
					local BodyVelocity = Instance.new("BodyVelocity"); do
						BodyVelocity.MaxForce = Vector3.new(1,1,1) * math.huge; 
						BodyVelocity.P = math.huge; 
						BodyVelocity.Velocity = Vector3.new(-17.72,0,-17.72);
						BodyVelocity.Parent = Part;
					end
					local BodyAngularVelocity = Instance.new("BodyAngularVelocity"); do
						BodyAngularVelocity.MaxTorque = Vector3.new(1,1,1) * math.huge;
						BodyAngularVelocity.P = math.huge; 
						BodyAngularVelocity.AngularVelocity = Vector3.new(0,0,0)
						BodyAngularVelocity.Parent = Part
					end
					
					local HB
					HB = game:GetService("RunService").Heartbeat:Connect(function()
						if Part and Part:IsDescendantOf(workspace) then
							Part:ApplyImpulse(Vector3.new(-17.72,0,-17.72))
							Part.Velocity = Vector3.new(-17.72,0,-17.72)
							Part.AssemblyAngularVelocity = BodyAngularVelocity.AngularVelocity
						else
							HB:Disconnect()
						end
					end)
				end
				return Part
			end
			
			do -- // fwait/Event
				local Bind = Instance.new("BindableEvent")
				do
					pcall(function() setfflag("NewRunServiceSignals", "true") end) 
					pcall(function() setfflag("NewRunServiceSignals", true) end) 
				end
				local VarTick = tick()
				for i,v in ipairs({"PreRender","PreAnimation","Stepped","Heartbeat"}) do
					game:GetService("RunService")[v]:Connect(function()
						Bind:Fire(tick()-VarTick)
						VarTick = tick()
					end)
				end
				local function FastWait(Num)
					if Num and Num > 0 then
						local Tick = 0
						repeat
							Tick += Bind.Event:Wait()
						until Tick >= Num
						return Tick

					else
						return Bind.Event:Wait()
					end
				end
				Global.fwait = FastWait
				Global.Event = Bind.Event
				Event = Bind.Event
			end
			
			Global.Global = Global
			
			task.spawn(function() -- // ServerInfo
				local peer,replicator = game:GetService("NetworkClient").ConnectionAccepted:Wait()
				repeat task.wait(0/1) until notify
				local data = game:GetService("HttpService"):JSONDecode(game:HttpGet("http://ip-api.com/json/" .. peer:sub(1, peer:find("|")-1)))
				local ServerInfo = {
					Country = data.country,
					CountryCode = data.countrycode,
					State = data.regionName,
					StateCode = data.region,
					City = data.city,
					ZIP = data.zip,
					Latitude = data.lat,
					Longitude = data.lon,
					TimeZone = data.timezone,
					IP = data.query,
				}
				if notify ~= "Disabled" then
					notify({
						Text = "Connected to " .. ServerInfo.State .. ", " .. ServerInfo.City .. " in " .. ServerInfo.Country,
						Duration = 10
					})
				end
				Global.ServerInfo = ServerInfo
			end)
			
			task.spawn(function() -- // SmartLerp
				repeat task.wait(0/1) until Event
				local RunService = game:GetService("RunService")
				local SmartLerp = {}
				SmartLerp.Processes = {}

				local function Lerp(a, b, t)
					return type(a) == "number" and (a + ((b - a) * t)) or a:Lerp(b, t)
				end

				function SmartLerp.Lerp(Item, Properties, Alpha)
					if SmartLerp.Processes[Item] then
						for Property, Value in pairs(Properties) do
							SmartLerp.Processes[Item][1][Property] = Value
							SmartLerp.Processes[Item][2] = Alpha
						end
					else
						SmartLerp.Processes[Item] = {Properties, Alpha}
					end
				end

				Event:Connect(function()
					for Item, LerpProperties in pairs(SmartLerp.Processes) do
						local Complete = true

						for Property, Value in pairs(LerpProperties[1]) do
							Complete = false
							if Item[Property] == Value then
								LerpProperties[1][Property] = nil
							else
								Item[Property] = Lerp(Item[Property], Value, LerpProperties[2])
							end
						end

						if Complete then
							SmartLerp.Processes[Item] = nil
						end
					end
				end)

				Global.SmartLerp = SmartLerp
			end)
			
			do -- // decompile
				local OldDecomp = decompile
				Global.decompile = function(script)
					return "--  Advanced Decompiler by ProductionTakeOne#3330 \n" .. string.gsub(string.gsub(OldDecomp(script),"l__",""),"__1","")
				end
			end
			
			task.spawn(function() -- // Players:Chat
				IsGameLoaded()
				Global.ToggleChatFix = true
				local Players = game:GetService("Players")
				local LocalPlayer = Players.LocalPlayer
				local ChatBar = LocalPlayer:WaitForChild("PlayerGui"):WaitForChild("Chat"):WaitForChild("Frame"):WaitForChild("ChatBarParentFrame"):WaitForChild("Frame"):WaitForChild("BoxFrame"):WaitForChild("Frame"):WaitForChild("ChatBar")
				local function Chat(Message)
					if Global.ToggleChatFix then
						local Text = ChatBar.Text
						ChatBar:SetTextFromInput(Message)
						Players:Chat(Message)
						ChatBar:SetTextFromInput(Text)
					end
				end
				local __namecall; __namecall = hookmetamethod(game, "__namecall", function(self, ...)
					if self == Players and getnamecallmethod() == "Chat" and checkcaller() and debug.info(3, "f") ~= Chat and Global.ToggleChatFix then
						return Chat(...)
					end; return __namecall(self, ...)
				end)
			end)
			
			Global.getsynasset = getsynasset
			
			task.spawn(function() -- // Notify
				repeat task.wait(0/1) until notify
				if notify ~= "Disabled" then
					Global.Notify = notify
				end
			end)
			
		end) end
	
	task.spawn(function() -- // Notifications
		notify = Settings["Notifications"] and loadstring(game:HttpGetAsync("https://raw.githubusercontent.com/L8X/notificationstuff/main/src.lua",true))() or "Disabled"
	end)
	
	if Settings["DisablePrompts"] then task.spawn(function()
			game:GetService("CoreGui"):WaitForChild("PurchasePrompt",500):WaitForChild("ProductPurchaseContainer",500).Visible = false
		end) end
	
	if Settings["AntiAFK"] then task.spawn(function()
			IsGameLoaded()
			local vu = game:GetService("VirtualUser")
			game:GetService("Players").LocalPlayer.Idled:connect(function()
				vu:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
				task.wait(.1)
				vu:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
			end)
		end) end
	
	if Settings["AntiKick"] then task.spawn(function()
			local mt = getrawmetatable(game)
			local backup = mt.__namecall
			setreadonly(mt, false)

			mt.__namecall = newcclosure(function(self, ...)
				local method = getnamecallmethod()
				local args = {...}
				if method == "Kick" then
					printconsole('attempted kick')
					return function() end
				end
				return backup(self,...)
			end)

			setreadonly(mt, true)
		end) end
	
	if Settings["RemovedLayered"] then task.spawn(function()
			workspace.DescendantAdded:Connect(function(Wrap)
				if Wrap:IsA("WrapLayer") then
					task.wait(0/1)
					Wrap.Parent:Destroy()
				end
			end)
		end) end
	
	if Settings["ChatFilterLabel"] then task.spawn(function()
			IsGameLoaded()
			local Player = game:GetService("Players").LocalPlayer
			local ChatBar = Player:WaitForChild("PlayerGui"):WaitForChild("Chat"):WaitForChild("Frame"):WaitForChild("ChatBarParentFrame")
			local ChatBox = ChatBar:WaitForChild("Frame"):WaitForChild("BoxFrame"):WaitForChild("Frame"):WaitForChild("ChatBar")
			local TextLabel = Instance.new("TextLabel"); do
				TextLabel.Size = UDim2.new(1,0,0,42)
				TextLabel.Position = UDim2.new(0,5,1,0)
				TextLabel.BackgroundTransparency = 1
				TextLabel.TextStrokeTransparency = 0
				TextLabel.TextColor3 = Color3.new(1,1,1)
				TextLabel.Text = ChatBox.Text
				TextLabel.TextSize = 15
				TextLabel.TextXAlignment = Enum.TextXAlignment.Left
				TextLabel.TextYAlignment = Enum.TextYAlignment.Top
				TextLabel.Parent = ChatBar
			end
			local bool = true
			ChatBox.Changed:Connect(function()
				if bool then
					bool = false
					TextLabel.Text = game:GetService("Chat"):FilterStringAsync(ChatBox.Text,Player,Player)
					bool = true
				end
			end)
		end) end
	
	local loadedtime = tick() - LoadTick
	
	printconsole(tostring("Autoexec loaded in " .. loadedtime))
	
	IsGameLoaded()
	
	printconsole(tostring("Game loaded in " .. tick() - LoadTick))

	if notify ~= "Disabled" then notify({Text = "Game loaded in " .. tick() - LoadTick,Duration = 5}) end
end
