local loadtime = tick()
local AdvSettings = {
	StartWithGui = true, -- For Kenzen GUI/CMD Bar
	KenzenGui = true, -- Toggle between GUI and CMD Bar
	Optimizer = false, -- Optimizes your game, can be useful on some games
	Backrooms = false, -- Teleports you to backrooms if you fall into the void
	UseUpToDateFile = false, -- Can load slower, loads from the github, uses default settings
	FastLoad = true, -- Replaces the roblox loading screen, makes loading faster
	ReplaceKickGui = true, -- Replaces the roblox kick gui, allows you to click things while disconnected
	ReplaceWaitWithTaskWait = true, -- Replaces the unoptimized wait with the chad task.wait
	ExtraFunctions = true, -- Adds netless(part) and replaces decompile
	DisableNotifications = false, -- Toggles Onscreen Notifictions
	WebsocketChat = true, -- Toggles Websocket Chat
	DisablesPurchasePrompts = true,
	AntiAFK = true, -- Prevents user from being AFK kicked
	AntiClientKick = false, -- Prevents user from being AFK kicked
	SaveObjects = true, -- Allows you to use SaveInstance(obj,name) to save objects
	AddGlobal = true,
	FastWait = true, -- Adds fwait()
	LayeredAntiCrash = true,
	FixedPlayerChatFunction = true,
}

local GUISettings = {
	MainColor = Color3.fromRGB(57, 0, 98),
	SecondaryColor = Color3.fromRGB(47, 0, 84),
	Image = "rbxassetid://4840955387" -- must use image id
}

if AdvSettings.UseUpToDateFile then
	loadstring(game:HttpGet("https://raw.githubusercontent.com/AwsZFvR4Fh6/Ya/main/extra/one'sautoexec.txt",true))()
	printconsole(tostring("Full Load Time in " .. tick() - loadtime))
else
	local newcoro = function(fun)
		return task.spawn(coroutine.create(fun))
	end

	local function isloaded()
		if not game:IsLoaded() then
			game.Loaded:Wait()
		end
	end

	local notify
	local getgenv = getgenv and getgenv() or shared
	local printconsole = printconsole or print
	local getsynasset = getsynasset or getcustomasset or nil
	local setfflag = setfflag or function(flag,bool) game:DefineFastFlag(flag,bool) end

	if AdvSettings.Optimizer then
		newcoro(function()
			loadstring(game:HttpGetAsync("https://raw.githubusercontent.com/L8X/GameOptimizer/main/src.lua", true))()
		end)
	end

	local function getsynassetfromurl(URL)
		local getsynasset, request = getsynasset or error('invalid attempt to \'getsynassetfromurl\' (custom asset retrieval function expected)'), (syn and syn.request) or (http and http.request) or (request) or error('invalid attempt to \'getsynassetfromurl\' (http request function expected)')
		local Extension, Types, URL = '', {'.png', '.webm'}, assert(tostring(type(URL)) == 'string', 'invalid argument #1 to \'getsynassetfromurl\' (string [URL] expected, got '..tostring(type(URL))..')') and URL or nil
		local Response, TempFile = request({
			Url = URL,
			Method = 'GET'
		})

		if Response.StatusCode == 200 then
			Extension = Response.Body:sub(2, 4) == 'PNG' and '.png' or Response.Body:sub(25, 28) == 'webm' and '.webm' or nil
		end

		if Response.StatusCode == 200 and (Extension and table.find(Types, Extension)) then
			writefile("loadingimage" .. Extension, Response.Body)
			return getsynasset("loadingimage" .. Extension)
		elseif Response.StatusCode ~= 200 or not Extension then
			warn('unexpected \'getsynassetfromurl\' Status Error: ' .. Response.StatusMessage .. ' ('..URL..')')
		elseif not (Extension) then
			warn('unexpected \'getsynassetfromurl\' Error: (PNG or webm file expected)')
		end
	end

	newcoro(function()
		if AdvSettings.AntiClientKick and newcclosure then
			local mt = getrawmetatable(game)
			local backup = mt.__namecall
			setreadonly(mt, false)

			mt.__namecall = newcclosure(function(self, ...)
				local method = getnamecallmethod()
				local args = {...}
				if method == "Kick" then
					printconsole('attempted kick')
					return function() end
				end
				return backup(self,...)
			end)

			setreadonly(mt, true)
		end
		if AdvSettings.FastLoad and not game:IsLoaded("Workspace") then
			local BlackFrame = game:GetService("CoreGui"):WaitForChild("RobloxLoadingGui",500):WaitForChild("BlackFrame",500)
			BlackFrame.BackgroundTransparency = 1--.Visible = false
			BlackFrame.Active = false
			BlackFrame.Changed:Connect(function()
				BlackFrame.BackgroundTransparency = 1
			end)
			task.wait(0/1)
			local fakecha = Instance.new("Model")
			local fakepart = Instance.new("Part")
			local fakehum = Instance.new("Humanoid")
			local vidgui = Instance.new("SurfaceGui")
			local vid = Instance.new("ImageLabel")

			fakepart.Size = Vector3.new(5,1,5)
			fakepart.CFrame = CFrame.Angles(0,math.rad(-90),0)--CFrame.new(Vector3.new(),workspace.CurrentCamera.CFrame.Position)
			fakepart.Transparency = 1

			fakecha.PrimaryPart = fakepart

			vidgui.Face = Enum.NormalId.Top

			vid.Size = UDim2.new(1,0,1,0)
			vid.BackgroundTransparency = 1
			newcoro(function()
				if getsynasset then
					vid.Image = isfile("loadingimage.png") and getsynasset("loadingimage.png") or getsynassetfromurl("https://cdn.discordapp.com/attachments/806690952089305158/954924304238260284/FN_nKHuUcAAY8H4.png")
				else
					vid.Image = "rbxassetid://9184481698"
				end
			end)

			vid.Parent = vidgui
			vidgui.Parent = fakepart
			fakepart.Parent = fakecha
			fakehum.Parent = fakecha
			fakecha.Parent = workspace
			isloaded()
			fakecha:Destroy()
		end
	end)

	if AdvSettings.StartWithGui then
		newcoro(function()
			if AdvSettings.KenzenGui then
				getgenv.AidKid = GUISettings
				local loadreturn = loadstring(game:HttpGet("https://raw.githubusercontent.com/AwsZFvR4Fh6/Ya/main/KenzenGui.lua",true))()
				local loadreturntime = tick() - loadreturn
				printconsole(tostring("GUI loaded in " .. loadreturntime))

				notify({
					Text = "GUI loaded in " .. loadreturntime,
					Duration = 5
				})

			else
				loadstring(game:HttpGet("https://raw.githubusercontent.com/AwsZFvR4Fh6/Ya/main/KenzenScript.lua",true))()
			end
		end)
	end

	if AdvSettings.ReplaceKickGui then
		newcoro(function()
			game:GetService("CoreGui"):WaitForChild("RobloxPromptGui",500):WaitForChild("promptOverlay",500).ChildAdded:Connect(function(v)
				task.wait(0/1)
				if v.Name == "ErrorPrompt" then
					game:GetService("GuiService"):ClearError()
					local ErrorText = v:FindFirstChild("ErrorMessage",true)
					v.Visible = false
					local VideoFrame,TextLabel = Instance.new("VideoFrame"),Instance.new("TextLabel")
					local TextButton = Instance.new("TextButton")
					TextButton.AnchorPoint = Vector2.new(0,0)
					TextButton.Size = UDim2.new(1,0,1,0)
					TextButton.ZIndex = 999999999
					TextButton.Text = ""
					TextButton.Transparency = 1

					VideoFrame.AnchorPoint = Vector2.new(0.5,1)
					VideoFrame.BackgroundTransparency = 1
					VideoFrame.Position = UDim2.new(0.5,0,0.8,0)
					VideoFrame.Size = UDim2.new(0,450,0,225)
					VideoFrame.ZIndex = 999999998
					VideoFrame.Looped = true
					newcoro(function()
						if getsynasset then
							VideoFrame.Video = isfile("loadingimage.webm") and getsynasset("loadingimage.webm") or getsynassetfromurl("https://cdn.discordapp.com/attachments/806623634038325318/957076752843280424/one-piece-vinsmoke-sanji.webm")
						else
							VideoFrame.Video = "rbxasset://5670785995"
						end
						VideoFrame:Play()
					end)

					TextLabel.AnchorPoint = Vector2.new(0.5,0)
					TextLabel.BackgroundTransparency = 1
					TextLabel.Position = UDim2.new(0.5,0,1,0)
					TextLabel.Size = UDim2.new(1,0,0.3,0)
					TextLabel.ZIndex = 999999998
					TextLabel.Font = Enum.Font.Gotham
					TextLabel.TextSize = 20
					TextLabel.Text = ErrorText.Text
					TextLabel.TextColor3 = Color3.new(1,1,1)
					TextLabel.TextStrokeTransparency = 0
					newcoro(function()
						ErrorText.Changed:Connect(function()
							TextLabel.Text = ErrorText.Text
						end)
						--repeat task.wait(0/1) until TextLabel.Text ~= txt
						--TextLabel:GetPropertyChangedSignal("Text"):Wait()
						--TextLabel:GetPropertyChangedSignal("Text"):Wait()
						--TextLabel.Text = game:GetService("CoreGui").RobloxPromptGui.promptOverlay:FindFirstChild("ErrorMessage",true).Text
					end)

					TextButton.Activated:Connect(function()
						VideoFrame:Destroy()
					end)

					TextButton.Parent = VideoFrame
					TextLabel.Parent = VideoFrame
					VideoFrame.Parent = game:GetService("CoreGui").RobloxPromptGui
					repeat
						game:GetService("GuiService"):ClearError()
						task.wait(0/1)
					until not VideoFrame
				end
			end)
		end)
	end
	newcoro(function()
		isloaded()
		if AdvSettings.SaveObjects then
			loadstring(game:HttpGetAsync("https://raw.githubusercontent.com/AwsZFvR4Fh6/Ya/main/SaveInstance.txt",true))()
		end
	end)
	newcoro(function()
		isloaded()
		if AdvSettings.DisablesPurchasePrompts then
			game.CoreGui:WaitForChild("PurchasePrompt",500):WaitForChild("ProductPurchaseContainer",500).Visible = false
		end
		if AdvSettings.AntiAFK then
			local vu = game:GetService("VirtualUser")
			game:GetService("Players").LocalPlayer.Idled:connect(function()
				vu:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
				wait(1)
				vu:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
			end)
		end
	end)

	if AdvSettings.WebsocketChat then
		newcoro(function()
			--websocket chat
			isloaded()
			repeat task.wait(0/1) until notify
			local websocktic = tick()
			local url = 'wss://webhookyeah.herokuapp.com'
			local player = game.Players.LocalPlayer

			local socket
			local marketplaceService = game:GetService("MarketplaceService")

			local function msgconnect(MESSAGE)
				--print(MESSAGE)
				local msg = game:GetService("HttpService"):JSONDecode(MESSAGE)
				if msg[1] == "MSG" then
					game.StarterGui:SetCore("ChatMakeSystemMessage", { 
						Text = msg[2] .. ": " .. msg[3];
						Font = Enum.Font.SourceSans;
						Color = msg[4] and Color3.fromHex(msg[4]) or Color3.fromRGB(255, 255, 243)
					})
				elseif msg[1] == "CONNECT" then
					game.StarterGui:SetCore("ChatMakeSystemMessage", { 
						Text = msg[2] .. " [" .. msg[3] .. "] " .. "has connected";
						Font = Enum.Font.SourceSansSemibold;
					})
					local isSuccessful, info = pcall(marketplaceService.GetProductInfo, marketplaceService, game.PlaceId)
					socket:Send(game:GetService("HttpService"):JSONEncode({"CONNECTINFO",player.Name,game.PlaceId,isSuccessful and info.Name or ""}))
				elseif msg[1] == "CONNECTINFO" then
					if msg[2] ~= player.Name then
						game.StarterGui:SetCore("ChatMakeSystemMessage", { 
							Text = msg[2] .. " is playing " .. "(" .. msg[3] .. ") " .. msg[4];
							Font = Enum.Font.SourceSansSemibold;
						})
					end
				elseif msg[1] == "JOIN" then
					if msg[2] == player.Name then
						socket:Send(game:GetService("HttpService"):JSONEncode({"JOINREQ",msg[3],game.PlaceId,game.JobId}))
					end
					--elseif 
				elseif msg[1] == "JOINREQ" then
					if msg[2] == player.Name then
						game:GetService('TeleportService'):TeleportToPlaceInstance(tonumber(msg[3]), msg[4], player)
					end
				end
			end

			local connection

			local function reconnect()
				local bruh = true
				while bruh do
					local randomtime = math.random(1,5)
					local succ,err = pcall(function()
						socket = syn.websocket.connect(url)
					end)
					if succ then
						if connection then connection:Disconnect() end
						connection = socket.OnMessage:Connect(msgconnect)
						socket:Send(game:GetService("HttpService"):JSONEncode({"CONNECT",player.Name,player.DisplayName}))
						bruh = false
						--print("Websocket restarted successfully")
						notify({
							Text = "Websocket connection restarted successfully",
							Duration = 3
						})
					else
						notify({
							Text = "Retrying connection to websocket in " .. randomtime,
							Duration = 3
						})
					end
					task.wait(randomtime)
				end
			end
			local succ,err = pcall(function()
				socket = syn.websocket.connect(url)
			end)
			if succ then 
				connection = socket.OnMessage:Connect(msgconnect)
				socket:Send(game:GetService("HttpService"):JSONEncode({"CONNECT",player.Name,player.DisplayName}))
				notify({
					Text = "Connected to Websocket in " .. tick() - websocktic,
					Duration = 3
				})
			else
				reconnect() 
			end

			socket.OnClose:Connect(function()
				notify({
					Text = "Websocket Disconnected",
					Duration = 3
				})
				reconnect()
			end)

			local remote = game:GetService("ReplicatedStorage"):FindFirstChild("DefaultChatSystemChatEvents",500):WaitForChild("SayMessageRequest",500)
			local remote_hook = nil
			remote_hook = replaceclosure(remote.FireServer, newcclosure(function(self, ...)
				return remote_hook(self, ...);
			end))

			local namecall = nil
			namecall = hookmetamethod(game, "__namecall", newcclosure(function(self, ...)
				local namecall_method, parameters = (getnamecallmethod or get_namecall_method)(), {...};

				if namecall_method == "FireServer" and self == remote then
					local split = parameters[1]:split(" ")
					local command = string.lower(split[1])
					if command == "/msg" then
						local data
						if string.sub(split[2],1,1) == ">" or string.sub(split[2],1,2) == "&g" then
							data = game:GetService("HttpService"):JSONEncode({"MSG",player.Name,string.sub(parameters[1],6),Color3.fromRGB(0, 255, 0):ToHex()})
						elseif string.sub(split[2],1,2) == "&r" then
							data = game:GetService("HttpService"):JSONEncode({"MSG",player.Name,string.sub(parameters[1],6),Color3.fromRGB(255, 0, 0):ToHex()})
						elseif string.sub(split[2],1,2) == "&b" then
							data = game:GetService("HttpService"):JSONEncode({"MSG",player.Name,string.sub(parameters[1],6),Color3.fromRGB(0, 0, 255):ToHex()})
						elseif string.sub(split[2],1,2) == "&y" then
							data = game:GetService("HttpService"):JSONEncode({"MSG",player.Name,string.sub(parameters[1],6),Color3.fromRGB(255, 255, 0):ToHex()})
						elseif string.sub(split[2],1,2) == "&c" then
							data = game:GetService("HttpService"):JSONEncode({"MSG",player.Name,string.sub(parameters[1],6),Color3.fromRGB(0, 255, 255):ToHex()})
						elseif string.sub(split[2],1,3) == "&dr" then
							data = game:GetService("HttpService"):JSONEncode({"MSG",player.Name,string.sub(parameters[1],6),Color3.fromRGB(128, 0, 0):ToHex()})
						elseif string.sub(split[2],1,2) == "&p" then
							data = game:GetService("HttpService"):JSONEncode({"MSG",player.Name,string.sub(parameters[1],6),Color3.fromRGB(255, 0, 255):ToHex()})
						elseif string.sub(split[2],1,3) == "&pu" then
							data = game:GetService("HttpService"):JSONEncode({"MSG",player.Name,string.sub(parameters[1],6),Color3.fromRGB(128, 0, 255):ToHex()})
						elseif string.sub(split[2],1,2) == "&o" then
							data = game:GetService("HttpService"):JSONEncode({"MSG",player.Name,string.sub(parameters[1],6),Color3.fromRGB(255, 128, 0):ToHex()})
						elseif string.sub(split[2],1,3) == "&dg" then
							data = game:GetService("HttpService"):JSONEncode({"MSG",player.Name,string.sub(parameters[1],6),Color3.fromRGB(0, 128, 0):ToHex()})
						elseif string.sub(split[2],1,3) == "&db" then
							data = game:GetService("HttpService"):JSONEncode({"MSG",player.Name,string.sub(parameters[1],6),Color3.fromRGB(0, 0, 128):ToHex()})
						elseif string.sub(split[2],1,3) == "&bl" then
							data = game:GetService("HttpService"):JSONEncode({"MSG",player.Name,string.sub(parameters[1],6),Color3.fromRGB(0, 0, 0):ToHex()})
						else
							data = game:GetService("HttpService"):JSONEncode({"MSG",player.Name,string.sub(parameters[1],6)})
						end
						socket:Send(data)
						return nil
					elseif command == "/joinplr" then
						local data = game:GetService("HttpService"):JSONEncode({"JOIN",parameters[1]:split(" ")[2],player.Name})
						socket:Send(data)
						return nil
					else
						return namecall(self, unpack(parameters));
					end
				else
					return namecall(self, unpack(parameters));
				end
			end))
		end)
	end

	if AdvSettings.Backrooms then
		newcoro(function()
			isloaded()
			local player = game.Players.LocalPlayer
			local function rootcheck(char)
				local root = char:WaitForChild("HumanoidRootPart",500)
				local parthb
				parthb = game:GetService("RunService").Heartbeat:Connect(function()
					if root and root.Parent then
						if root.Position.Y <= workspace.FallenPartsDestroyHeight + 10 then
							game:GetService('TeleportService'):Teleport(3227921645, player)
						end
					else
						parthb:Disconnect()
					end
				end)
			end
			player.CharacterAdded:Connect(rootcheck)
			if player.Character then rootcheck(player.Character) end
		end)
	end

	if AdvSettings.LayeredAntiCrash then
		newcoro(function()
			workspace.DescendantAdded:Connect(function(Wrap)
				if Wrap:IsA("WrapLayer") then
					task.wait(0/1)
					Wrap.Parent:Destroy()
				end
			end)
		end)
	end

	if AdvSettings.FixedPlayerChatFunction then
		newcoro(function()
			isloaded()
			local Players = game:GetService("Players")
			local LocalPlayer =
				Players.LocalPlayer or
				Players:GetPropertyChangedSignal("LocalPlayer"):Wait() and Players.LocalPlayer

			local function WaitForInstance(Ancestor, ...)
				local DescendantNames = {...}
				local Descendant = Ancestor

				for _, DescendantName in ipairs(DescendantNames) do
					Descendant = Descendant:WaitForChild(DescendantName)
				end

				return Descendant
			end

			local ChatBar = LocalPlayer:WaitForChild("PlayerGui"):WaitForChild("Chat"):WaitForChild("Frame"):WaitForChild("ChatBarParentFrame"):WaitForChild("Frame"):WaitForChild("BoxFrame"):WaitForChild("Frame"):WaitForChild("ChatBar")

			local function Chat(Message)
				local Text = ChatBar.Text

				ChatBar:SetTextFromInput(Message)

				Players:Chat(Message)

				ChatBar:SetTextFromInput(Text)
			end

			local __namecall

			__namecall = hookmetamethod(game, "__namecall", function(self, ...)
				if
					self == Players and
					getnamecallmethod() == "Chat" and
					checkcaller() and
					debug.info(3, "f") ~= Chat
				then
					return Chat(...)
				end

				return __namecall(self, ...)
			end)
		end)
	end

	if AdvSettings.ExtraFunctions then
		local function netless(part)
			if part:IsA("BasePart") then
				local BodyVelocity = Instance.new("BodyVelocity",part)
				BodyVelocity.MaxForce = Vector3.new(math.huge,math.huge,math.huge); 
				BodyVelocity.P = math.huge; 
				BodyVelocity.Velocity = Vector3.new(-25.05,-25.05,-25.05)

				local BodyAngularVelocity = Instance.new("BodyAngularVelocity",part)
				BodyAngularVelocity.MaxTorque = Vector3.new(math.huge,math.huge,math.huge); 
				BodyAngularVelocity.P = math.huge;

				local disconnect = game["Run Service"].Heartbeat:Connect(function()
					part:ApplyImpulse(Vector3.new(-25.05,-25.05,-25.05))
				end)
				part.AncestryChanged:Connect(function()
					if not part.Parent then 
						disconnect:Disconnect()
					end
				end)
			end
			return part
		end

		local olddecompile = decompile
		local function advdecompile(script)
			return "--  Advanced Decompiler by ProductionTakeOne#3330 \n" .. string.gsub(string.gsub(olddecompile(script),"l__",""),"__1","")
		end

		getgenv.decompile = advdecompile
		getgenv.netless = netless
	end

	if AdvSettings.ReplaceWaitWithTaskWait then
		getgenv.wait = task.wait
	end

	if AdvSettings.AddGlobal then
		getgenv.Global = getgenv
	end

	if AdvSettings.FastWait then
		task.spawn(function()
			local Bind = Instance.new("BindableEvent")
			local RunService = game:GetService("RunService")
			pcall(function() setfflag("NewRunServiceSignals", "true") end) 
			pcall(function() setfflag("NewRunServiceSignals", true) end) 
			for i,v in ipairs({RunService.Heartbeat,RunService.Stepped,RunService.RenderStepped,RunService.PreAnimation}) do
				local Tick = tick()
				v:Connect(function()
					Bind:Fire(tick()-Tick)
					Tick = tick()
				end)
			end
			local function FastWait(Num)
				if Num and Num > 0 then
					local Tick = tick()
					repeat
						Tick += Bind.Event:Wait()
					until Tick >= Num
					return Tick
				else
					return Bind.Event:Wait()
				end
			end
			getgenv.fwait = FastWait
			getgenv.Event = Bind.Event
		end)
	end

	notify = AdvSettings.DisableNotifications and function() end or loadstring(game:HttpGetAsync("https://raw.githubusercontent.com/L8X/notificationstuff/main/src.lua",true))()

	local loadedtime = tick() - loadtime

	printconsole(tostring("Autoexec loaded in " .. loadedtime))

	notify({
		Text = "Autoexec loaded in " .. loadedtime,
		Duration = 5
	})

	isloaded()

	printconsole(tostring("Game loaded in " .. tick() - loadtime))

	notify({
		Text = "Game loaded in " .. tick() - loadtime,
		Duration = 5
	})
end
